name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACR_NAME: dentalacr
  AKS_CLUSTER: dental-aks
  RESOURCE_GROUP: dental-rg

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Run tests with Maven
      run: mvn clean test
      env:
        SPRING_PROFILES_ACTIVE: test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: target/surefire-reports/

  build-and-deploy:
    name: Build and Deploy to AKS
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven (skip tests - already ran)
      run: mvn clean package -DskipTests

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: az acr login --name ${{ env.ACR_NAME }}

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/dental-app:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER }}

    - name: Deploy to AKS
      run: |
        kubectl set image deployment/dental-app \
          dental-app=${{ env.IMAGE_TAG }} \
          -n dental-system
        kubectl rollout status deployment/dental-app -n dental-system --timeout=5m

    - name: Verify deployment
      run: |
        kubectl get pods -n dental-system
        kubectl get svc dental-app-service -n dental-system

